/*
 * Functions to be performed after the test results are generated by mochawesome
 */

const archiver = require('archiver');
const config = require('config');
const fs = require('fs');
const google = require('googleapis');
const nodemailer = require('nodemailer');
const path = require('path');
const winston = require('winston');
// Key generated from Google Cloud API Console
const key = require('./google_keys.json');

const jwtClient = new google.auth.JWT(
  key.client_email,
  null,
  key.private_key,
  ['https://www.googleapis.com/auth/drive'], // an array of auth scopes
  null
);
const fileOutput = fs.createWriteStream('test_results.zip');
const archive = archiver('zip', { zlib: { level: 9 } });
const drive = google.drive({ version: 'v3' });

// Create test result zip using Archiver
archive.pipe(fileOutput);
archive.directory('mochawesome-report/', false);
archive.on('error', (err) => {
  throw err;
});
archive.finalize();
winston.info('Test results zipped');

// SMTP/Gmail transport for sending results
const trans = nodemailer.createTransport(config.PREFER_GMAIL ? config.GMAIL : config.SMPT_CONFIG);

jwtClient.authorize((err, tokens) => { // eslint-disable-line no-unused-vars
  if (err) {
    winston.error(err);
    return;
  }
  // Make an authorized request to create the test_results.zip file
  const fileMetadata = {
    name: 'test_results.zip',
    mimeType: 'application/zip'
  };
  const media = {
    body: fs.createReadStream(path.join(__dirname, 'test_results.zip'))
  };
  drive.files.create({
    resource: fileMetadata,
    media,
    auth: jwtClient
  }, (fileErr, file) => {
    if (fileErr) {
      // Handle error
      winston.error(fileErr);
    } else {
      const fileURL = file.data.id;
      // Set permission to make everyone with URL to view the zip file
      const body = {
        value: 'default',
        type: 'anyone',
        role: 'reader'
      };
      drive.permissions.create({
        fileId: fileURL,
        resource: body,
        auth: jwtClient
      }, (error, res, resbody) => { // eslint-disable-line no-unused-vars
        if (error) {
          winston.error(error);
        }
      });
      // Send email with the google drive URL embedded
      const mailOp = {
        from: config.FROM_EMAIL,
        to: config.TO_EMAILS,
        subject: config.MAIL_SUBJECT,
        html: `${config.MAIL_BODY}<p> https://drive.google.com/file/d/${fileURL}/view </p>`
      };

      trans.sendMail(mailOp, (mailErr, info) => { // eslint-disable-line no-unused-vars
        if (mailErr) {
          winston.error(mailErr);
        } else {
          winston.info('Email sent');
        }
      });
    }
  });
});
